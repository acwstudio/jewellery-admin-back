#{{ if .Values.production }}
#apiVersion: batch/v1
#kind: CronJob
#metadata:
#  name: db-export
#  namespace: {{ .Release.Namespace }}
#  annotations:
#    "helm.sh/hook-delete-policy": hook-succeeded
#spec:
##  schedule: "@daily"
#  # временная болванка по переключению раз в год.
#  schedule: "0 0 1 1 *"
#  jobTemplate:
#    spec:
#      template:
#        spec:
#          containers:
#            - name: db-export-orders-orders
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "orders.orders", "DbExport-OrdersOrders-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-orders-products
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "orders.products", "DbExport-OrdersProducts-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-orders-deliveries
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "orders.deliveries", "DbExport-OrdersDeliveries-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-orders-personal-data
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "orders.personal_data", "DbExport-OrdersPersonalData-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-users-users
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "users.users", "DbExport-UsersUsers-Site", "--except=password", "--except=remember_token", "--primary=user_id" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-users-wishlist-products
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "users.wishlist_products", "DbExport-WishlistProducts-Site", "--except=password", "--except=remember_token" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-catalog-products
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "catalog.products", "DbExport-CatalogProducts-Site"]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-catalog-product-offers
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "catalog.product_offers", "DbExport-CatalogProductOffers-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-catalog-product-offer-prices
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "catalog.product_offer_prices", "DbExport-CatalogProductOfferPrices-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-collections-collections
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "collections.collections", "DbExport-CollectionsCollections-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-collections-collection-products
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "collections.collection_products", "DbExport-CollectionsCollectionProducts-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-collections-stones
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "collections.stones", "DbExport-CollectionsStones-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#            - name: db-export-collections-collection-stones
#              image: {{ .Values.jobs.image.name }}:{{ .Values.jobs.image.tag }}
#              imagePullPolicy: "Always"
#              command: [ "php",  "artisan", "db:export", "collections.collection_stones", "DbExport-CollectionsCollectionStones-Site" ]
#              volumeMounts:
#                - mountPath: /var/www/.env
#                  name: env
#                  readOnly: true
#                  subPath: .env
#          volumes:
#            - name: env
#              configMap:
#                name: {{ .Values.core.appName }}-env
#          restartPolicy: Never
#          imagePullSecrets:
#            - name: registry-credentials
#      backoffLimit: {{ .Values.jobs.backOffLimit }}
#{{ end }}
